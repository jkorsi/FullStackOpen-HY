{"version":3,"sources":["components/Filter.js","components/Person.js","services/deleteData.js","components/PersonsList.js","components/Inputs.js","services/getData.js","services/addData.js","services/updateData.js","components/Notification.js","App.js","index.js"],"names":["filterValue","handleFilterChange","Filter","filter","react_default","a","createElement","style","padding","value","onChange","Person","_ref","person","deletePerson","name","number","onClick","deleteData","id","window","confirm","axios","delete","concat","then","response","data","catch","error","alert","PersonsList","props","console","log","filteredRows","toLowerCase","includes","map","filteredPerson","components_Person","key","Inputs","inputs","onSubmit","addPersonAndNumber","newName","handlePersonsChange","newPhone","handlePhoneChange","type","getAll","get","addData","newObject","post","updateData","put","Notification","message","isSuccess","color","toString","className","App","_useState","useState","_useState2","Object","slicedToArray","personsList","setPersonsList","_useState3","_useState4","setName","_useState5","_useState6","setPhone","_useState7","_useState8","setFilter","_useState9","_useState10","errorMessage","setErrorMessage","_useState11","_useState12","setSuccess","baseUrl","useEffect","initialPersons","throwMessage","errorParam","setTimeout","components_Notification","components_Filter","event","target","components_Inputs","preventDefault","length","personToUpdate","find","changedPerson","objectSpread","updatePerson","personObject","components_PersonsList","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.57290f63.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nlet filterValue;\r\nlet handleFilterChange;\r\n\r\nconst Filter = ( filter ) =>\r\n{\r\n\r\n    if ( typeof filter.filterValue == null )\r\n    {\r\n        filterValue = ''\r\n    } else\r\n    {\r\n        filterValue = filter.filterValue\r\n    }\r\n\r\n    if ( typeof filter.handleFilterChange == null )\r\n    {\r\n        handleFilterChange = ''\r\n    } else\r\n    {\r\n        handleFilterChange = filter.handleFilterChange\r\n    }\r\n\r\n    return (\r\n        <div style={ { padding: 10 } }>\r\n            Filtteri: <input value={ filterValue } onChange={ handleFilterChange } />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter ","import React from 'react'\r\n\r\nconst Person = ({person, deletePerson}) =>\r\n{\r\n  const label = 'Poista'\r\n  const space = ' '\r\n  const comma = ','\r\n  return (\r\n    <li>\r\n      {person.name}{comma} {person.number} {space}\r\n      <button onClick={deletePerson}>{label}</button>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Person","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst deleteData = id =>\r\n{\r\n    if (window.confirm('Haluatko varmasti poistaa henkilön?'))\r\n    {\r\n\r\n        const request = axios.delete(`${baseUrl}/${id}`)\r\n        return request\r\n            .then(response => response.data)\r\n            .catch(error =>\r\n            {\r\n                alert(\r\n                    `The person '${id}' was already deleted from server`\r\n                )\r\n            })\r\n    }\r\n}\r\n\r\nexport default deleteData\r\n\r\n    // .then( returnedNote =>\r\n    // {\r\n    //     setNotes( notes.map( note => note.id !== id ? note : returnedNote ) )\r\n    // } ).catch( error =>\r\n    // {\r\n    //     alert(\r\n    //         `the note '${ note.content }' was already deleted from server`\r\n    //     )\r\n    //     setNotes( notes.filter( n => n.id !== id ) )\r\n    // } )","import React from 'react'\r\nimport Person from './Person'\r\nimport Filter from './Filter'\r\nimport deleteData from '../services/deleteData'\r\n\r\n\r\n//TOIMII - ÄLÄ KOSKE\r\nconst PersonsList = (props) =>\r\n{\r\n    console.log('Filtered rows propsit: ', props)\r\n    console.log(props.filteredRows)\r\n    return props.filteredRows.filter(person =>\r\n\r\n        person.name.toLowerCase().includes(props.filterValue.toLowerCase())).map(filteredPerson =>\r\n        {\r\n            return (\r\n                //Komponentti\r\n                <Person\r\n                    //Tämän perusteella komponentit erotellaan arrayssa\r\n                    key={filteredPerson.id}\r\n\r\n                    //Tämä sisältö näytetään\r\n                    person={filteredPerson}\r\n\r\n                    //Rekisteröidään nappula id:n avulla tälle objektille\r\n                    deletePerson={() => props.deletePerson(filteredPerson.id)}\r\n                />\r\n            )\r\n        })\r\n}\r\n\r\nexport default PersonsList","import React from 'react'\r\n\r\nconst Inputs = ( inputs ) =>\r\n{\r\n\r\n    return (\r\n        <form onSubmit={ inputs.addPersonAndNumber }>\r\n            <div style={ { padding: 10 } }>\r\n                Nimi: <input value={ inputs.newName } onChange={ inputs.handlePersonsChange } />\r\n            </div>\r\n            <div style={ { padding: 10 } }>\r\n                Puhelinnumero: <input value={ inputs.newPhone } onChange={ inputs.handlePhoneChange } />\r\n            </div>\r\n            <div>\r\n                <br></br>\r\n                <button type=\"submit\">Lisää</button>\r\n            </div>\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\nexport default Inputs ","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () =>\r\n{\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default getAll","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst addData = newObject =>\r\n{\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default addData","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst updateData = (id, newObject) =>\r\n{\r\n    console.log(\"ID: \", id)\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default updateData","import React, { useState } from 'react'\r\n\r\nconst Notification = ( { message, isSuccess } ) =>\r\n{\r\n\r\n    var color = 'green'\r\n    console.log( 'Message', message )\r\n    console.log( 'Success ', isSuccess.toString() )\r\n\r\n\r\n    if ( message === null )\r\n    {\r\n        return null\r\n    }\r\n\r\n\r\n    if ( !isSuccess )\r\n    {\r\n        color = 'red'\r\n        console.log( \"No success\" )\r\n    } else if ( isSuccess )\r\n    {\r\n        color = 'green'\r\n        console.log( \"Success\" )\r\n    }\r\n\r\n    return (\r\n        <div className=\"error\" style={ { color: color } }>\r\n            { message }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification\r\n\r\n\r\n//style = { { width: 150, height: 90 } }","import React, {useState, useEffect} from 'react'\r\n\r\nimport Filter from './components/Filter'\r\nimport PersonsList from './components/PersonsList'\r\nimport Inputs from './components/Inputs'\r\nimport getAll from './services/getData'\r\nimport addData from './services/addData'\r\nimport deleteData from './services/deleteData'\r\nimport updateData from './services/updateData'\r\nimport Notification from './components/Notification'\r\n\r\nimport './App.css';\r\n\r\nconst App = () =>\r\n{\r\n    // Tilamuuttujat\r\n    const [personsList, setPersonsList] = useState([])\r\n    const [newName, setName] = useState('')\r\n    const [newPhone, setPhone] = useState('')\r\n    const [filterValue, setFilter] = useState('')\r\n    const [errorMessage, setErrorMessage] = useState(null)\r\n    const [isSuccess, setSuccess] = useState(true)\r\n\r\n    const filteredRows = personsList\r\n    const baseUrl = '/api/persons'\r\n\r\n\r\n    //Efekti, jolla noudetaan henkilölista ja asetetaan se tilamuuttujaan\r\n    const hook = () =>\r\n    {\r\n        getAll()\r\n            .then(initialPersons =>\r\n            {\r\n                console.log('Promise fulfilled')\r\n                console.log(initialPersons)\r\n                setPersonsList(initialPersons)\r\n            })\r\n    }\r\n\r\n    useEffect(hook, [])\r\n\r\n    // TOIMII - ÄLÄ KOSKE \r\n    const handlePersonsChange = (event) =>\r\n    {\r\n        setName(event.target.value)\r\n    }\r\n\r\n    // TOIMII - ÄLÄ KOSKE \r\n    const handlePhoneChange = (event) =>\r\n    {\r\n        setPhone(event.target.value)\r\n    }\r\n\r\n    //TOIMII - ÄLÄ KOSKE\r\n    const handleFilterChange = (event) =>\r\n    {\r\n        setFilter(event.target.value)\r\n    }\r\n\r\n    // TOIMII - ÄLÄ KOSKE \r\n    const addOrUpdatePerson = (event) =>\r\n    {\r\n        event.preventDefault()\r\n\r\n        if (personsList.filter(person => person.name.toLowerCase() === newName.toLowerCase()).length > 0)\r\n        {\r\n            if (window.confirm(`Henkilö ${newName} on jo olemassa. Päivitetäänkö numero?`))\r\n            {\r\n                updatePerson()\r\n            }\r\n        } else\r\n        {\r\n            const personObject = {\r\n                name: newName,\r\n                number: newPhone\r\n            }\r\n            addData(personObject)\r\n                .then(response =>\r\n                {\r\n                    setSuccess(true)\r\n                    setPersonsList(personsList.concat(personObject))\r\n                    setName('')\r\n                    setPhone('')\r\n                    throwMessage(`Henkilö ${personObject.name} lisätty`)\r\n                })\r\n        }\r\n    }\r\n\r\n    function updatePerson()\r\n    {\r\n        const name = newName\r\n\r\n        const personToUpdate = personsList.find(person => person.name === name)\r\n        const id = personToUpdate.id\r\n\r\n        const url = `${baseUrl}${id}`\r\n\r\n        console.log(personToUpdate)\r\n        const changedPerson = {...personToUpdate, number: newPhone}\r\n        console.log(changedPerson)\r\n        updateData(id, changedPerson)\r\n            .then(changedPerson =>\r\n            {\r\n                setSuccess(true)\r\n                setPersonsList(personsList.map(person => person.id !== id ? person : changedPerson))\r\n                setName('')\r\n                setPhone('')\r\n                throwMessage(`Henkilön ${name} numero päivitetty.`)\r\n            })\r\n            .catch(error =>\r\n            {\r\n                setSuccess(false)\r\n                throwMessage(`Henkilö ${name} on poistettu palvelimelta. :( Kokeile lisätä henkilö uudelleen!`)\r\n                setPersonsList(personsList.filter(person => person.id !== id))\r\n            })\r\n    }\r\n\r\n    function deletePerson(id)\r\n    {\r\n        setSuccess(true)\r\n        deleteData(id)\r\n            .then(setPersonsList(personsList.filter(person => person.id !== id)))\r\n\r\n        throwMessage(`Poistettiin henkilö ${id}`)\r\n    }\r\n\r\n    function throwMessage(errorParam)\r\n    {\r\n        setErrorMessage(\r\n            (`${errorParam}`)\r\n        )\r\n        setTimeout(() =>\r\n        {\r\n            setErrorMessage(null)\r\n        }, 5000)\r\n\r\n    }\r\n\r\n\r\n    // Refaktoroi komponentit omiin tiedostoihin\r\n    return (\r\n        <div>\r\n            <h2>Puhelinluettelo</h2>\r\n            <Notification\r\n                message={errorMessage}\r\n                isSuccess={isSuccess}\r\n            />\r\n\r\n            <h3>Hae henkilöä</h3>\r\n            <Filter\r\n                filterValue={filterValue}\r\n                handleFilterChange={handleFilterChange}\r\n            />\r\n            <h3>Lisää henkilö</h3>\r\n            <Inputs\r\n                addPersonAndNumber={addOrUpdatePerson}\r\n                newName={newName}\r\n                handlePersonsChange={handlePersonsChange}\r\n                newPhone={newPhone}\r\n                handlePhoneChange={handlePhoneChange}\r\n            />\r\n            <h2>Numerot</h2>\r\n            <ul>\r\n                <PersonsList\r\n                    filterValue={filterValue}\r\n                    filteredRows={filteredRows}\r\n                    deletePerson={deletePerson}\r\n                />\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n\r\n\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render( <App />, document.getElementById( 'root' ) )"],"sourceRoot":""}